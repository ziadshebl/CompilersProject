Terminals unused in grammar

   NIL
   VARFX


Grammar

    0 $accept: program $end

    1 program: function

    2 function: function functionDeclaration
    3         | function varDeclaration
    4         | function constDeclaration
    5         | /* empty */

    6 type: INT
    7     | STR
    8     | BOOL

    9 functionParam: variable

   10 $@1: /* empty */

   11 functionParam: variable $@1 ',' functionParam
   12              | /* empty */

   13 functionArgs: expr

   14 $@2: /* empty */

   15 functionArgs: expr $@2 ',' functionArgs
   16             | /* empty */

   17 varDeclaration: variable ';'
   18               | variable '=' expr ';'

   19 constDeclaration: CONST variable '=' expr ';'

   20 variable: type VARIDENTIFIER

   21 $@3: /* empty */

   22 $@4: /* empty */

   23 $@5: /* empty */

   24 $@6: /* empty */

   25 functionDeclaration: type FUNCTION FUNCIDENTIFIER $@3 '(' $@4 functionParam ')' $@5 openScope $@6 stmtList closeScope

   26 $@7: /* empty */

   27 $@8: /* empty */

   28 $@9: /* empty */

   29 $@10: /* empty */

   30 functionDeclaration: VOID FUNCTION FUNCIDENTIFIER $@7 '(' $@8 functionParam ')' $@9 openScope $@10 stmtList closeScope

   31 stmtBlock: openScope stmtList closeScope

   32 stmt: ';'
   33     | expr ';'
   34     | PRINT '(' expr ')' ';'
   35     | whileStmt
   36     | doStmt
   37     | forStmt
   38     | continueStmt
   39     | breakStmt
   40     | ifStmt
   41     | stmtBlock
   42     | varDeclaration
   43     | constDeclaration
   44     | returnStmt
   45     | switchStmt

   46 $@11: /* empty */

   47 ifStmt: IF '(' expr ')' $@11 stmt ifContinue

   48 ifContinue: /* empty */

   49 $@12: /* empty */

   50 ifContinue: ELSE $@12 stmt

   51 returnStmt: RETURN expr ';'
   52           | RETURN ';'

   53 breakStmt: BREAK ';'

   54 continueStmt: CONTINUE ';'

   55 $@13: /* empty */

   56 switchStmt: SWITCH '(' expr ')' openScope $@13 caseStmts closeScope

   57 caseStmts: caseStmt caseStmts
   58          | caseStmt

   59 $@14: /* empty */

   60 $@15: /* empty */

   61 $@16: /* empty */

   62 caseStmt: CASE $@14 expr $@15 ':' $@16 stmtList

   63 $@17: /* empty */

   64 caseStmt: DEFAULT $@17 ':' stmtList

   65 $@18: /* empty */

   66 $@19: /* empty */

   67 whileStmt: WHILE '(' $@18 expr ')' openScope $@19 stmtList closeScope

   68 $@20: /* empty */

   69 $@21: /* empty */

   70 forStmt: FOR '(' $@20 loopExpression ')' openScope $@21 stmtList closeScope

   71 $@22: /* empty */

   72 $@23: /* empty */

   73 doStmt: DO openScope $@22 stmtList closeScope $@23 WHILE '(' expr ')' ';'

   74 $@24: /* empty */

   75 $@25: /* empty */

   76 $@26: /* empty */

   77 loopExpression: INT VARIDENTIFIER $@24 '=' expr $@25 ';' expr $@26 ';' expr

   78 $@27: /* empty */

   79 $@28: /* empty */

   80 $@29: /* empty */

   81 loopExpression: VARIDENTIFIER $@27 '=' expr $@28 ';' expr $@29 ';' expr

   82 stmtList: stmt
   83         | stmtList stmt

   84 expr: lValue '=' expr
   85     | lValue
   86     | consValues
   87     | '-' expr

   88 $@30: /* empty */

   89 expr: FUNCIDENTIFIER $@30 '(' functionArgs ')'
   90     | expr '+' expr
   91     | expr '-' expr
   92     | expr '*' expr
   93     | expr '/' expr
   94     | expr '<' expr
   95     | expr '>' expr
   96     | expr '%' expr
   97     | expr OR expr
   98     | expr AND expr
   99     | NOT expr
  100     | lValue INCASSIGNMENT expr
  101     | lValue DECASSIGNMENT expr
  102     | lValue DIVIDEASSIGNMENT expr
  103     | lValue MULTIPLYASSIGNMENT expr
  104     | lValue INC
  105     | INC lValue
  106     | lValue DEC
  107     | DEC lValue
  108     | expr GE expr
  109     | expr LE expr
  110     | expr NE expr
  111     | expr EQ expr
  112     | '(' expr ')'

  113 lValue: VARIDENTIFIER

  114 consValues: INTEGER
  115           | STRING
  116           | FALSEBOOL
  117           | TRUEBOOL

  118 openScope: '{'

  119 closeScope: '}'


Terminals, with rules where they appear

$end (0) 0
'%' (37) 96
'(' (40) 25 30 34 47 56 67 70 73 89 112
')' (41) 25 30 34 47 56 67 70 73 89 112
'*' (42) 92
'+' (43) 90
',' (44) 11 15
'-' (45) 87 91
'/' (47) 93
':' (58) 62 64
';' (59) 17 18 19 32 33 34 51 52 53 54 73 77 81
'<' (60) 94
'=' (61) 18 19 77 81 84
'>' (62) 95
'{' (123) 118
'}' (125) 119
error (256)
STRING (258) 115
INTEGER (259) 114
VARIDENTIFIER (260) 20 77 81 113
TRUEBOOL (261) 117
FALSEBOOL (262) 116
INT (263) 6 77
STR (264) 7
BOOL (265) 8
VOID (266) 30
SWITCH (267) 56
CASE (268) 62
DEFAULT (269) 64
CONST (270) 19
DO (271) 73
NIL (272)
OR (273) 97
AND (274) 98
NOT (275) 99
FUNCTION (276) 25 30
RETURN (277) 51 52
INC (278) 104 105
DEC (279) 106 107
INCASSIGNMENT (280) 100
DECASSIGNMENT (281) 101
MULTIPLYASSIGNMENT (282) 103
DIVIDEASSIGNMENT (283) 102
FUNCIDENTIFIER (284) 25 30 89
WHILE (285) 67 73
IF (286) 47
PRINT (287) 34
FOR (288) 70
CONTINUE (289) 54
BREAK (290) 53
VARFX (291)
IFX (292)
ELSE (293) 50
NE (294) 110
EQ (295) 111
LE (296) 109
GE (297) 108
UMINUS (298)


Nonterminals, with rules where they appear

$accept (59)
    on left: 0
program (60)
    on left: 1, on right: 0
function (61)
    on left: 2 3 4 5, on right: 1 2 3 4
type (62)
    on left: 6 7 8, on right: 20 25
functionParam (63)
    on left: 9 11 12, on right: 11 25 30
$@1 (64)
    on left: 10, on right: 11
functionArgs (65)
    on left: 13 15 16, on right: 15 89
$@2 (66)
    on left: 14, on right: 15
varDeclaration (67)
    on left: 17 18, on right: 3 42
constDeclaration (68)
    on left: 19, on right: 4 43
variable (69)
    on left: 20, on right: 9 11 17 18 19
functionDeclaration (70)
    on left: 25 30, on right: 2
$@3 (71)
    on left: 21, on right: 25
$@4 (72)
    on left: 22, on right: 25
$@5 (73)
    on left: 23, on right: 25
$@6 (74)
    on left: 24, on right: 25
$@7 (75)
    on left: 26, on right: 30
$@8 (76)
    on left: 27, on right: 30
$@9 (77)
    on left: 28, on right: 30
$@10 (78)
    on left: 29, on right: 30
stmtBlock (79)
    on left: 31, on right: 41
stmt (80)
    on left: 32 33 34 35 36 37 38 39 40 41 42 43 44 45, on right: 47
    50 82 83
ifStmt (81)
    on left: 47, on right: 40
$@11 (82)
    on left: 46, on right: 47
ifContinue (83)
    on left: 48 50, on right: 47
$@12 (84)
    on left: 49, on right: 50
returnStmt (85)
    on left: 51 52, on right: 44
breakStmt (86)
    on left: 53, on right: 39
continueStmt (87)
    on left: 54, on right: 38
switchStmt (88)
    on left: 56, on right: 45
$@13 (89)
    on left: 55, on right: 56
caseStmts (90)
    on left: 57 58, on right: 56 57
caseStmt (91)
    on left: 62 64, on right: 57 58
$@14 (92)
    on left: 59, on right: 62
$@15 (93)
    on left: 60, on right: 62
$@16 (94)
    on left: 61, on right: 62
$@17 (95)
    on left: 63, on right: 64
whileStmt (96)
    on left: 67, on right: 35
$@18 (97)
    on left: 65, on right: 67
$@19 (98)
    on left: 66, on right: 67
forStmt (99)
    on left: 70, on right: 37
$@20 (100)
    on left: 68, on right: 70
$@21 (101)
    on left: 69, on right: 70
doStmt (102)
    on left: 73, on right: 36
$@22 (103)
    on left: 71, on right: 73
$@23 (104)
    on left: 72, on right: 73
loopExpression (105)
    on left: 77 81, on right: 70
$@24 (106)
    on left: 74, on right: 77
$@25 (107)
    on left: 75, on right: 77
$@26 (108)
    on left: 76, on right: 77
$@27 (109)
    on left: 78, on right: 81
$@28 (110)
    on left: 79, on right: 81
$@29 (111)
    on left: 80, on right: 81
stmtList (112)
    on left: 82 83, on right: 25 30 31 62 64 67 70 73 83
expr (113)
    on left: 84 85 86 87 89 90 91 92 93 94 95 96 97 98 99 100 101 102
    103 104 105 106 107 108 109 110 111 112, on right: 13 15 18 19
    33 34 47 51 56 62 67 73 77 81 84 87 90 91 92 93 94 95 96 97 98
    99 100 101 102 103 108 109 110 111 112
$@30 (114)
    on left: 88, on right: 89
lValue (115)
    on left: 113, on right: 84 85 100 101 102 103 104 105 106 107
consValues (116)
    on left: 114 115 116 117, on right: 86
openScope (117)
    on left: 118, on right: 25 30 31 56 67 70 73
closeScope (118)
    on left: 119, on right: 25 30 31 56 67 70 73


state 0

    0 $accept: . program $end

    $default  reduce using rule 5 (function)

    program   go to state 1
    function  go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: function .
    2 function: function . functionDeclaration
    3         | function . varDeclaration
    4         | function . constDeclaration

    INT    shift, and go to state 4
    STR    shift, and go to state 5
    BOOL   shift, and go to state 6
    VOID   shift, and go to state 7
    CONST  shift, and go to state 8

    $default  reduce using rule 1 (program)

    type                 go to state 9
    varDeclaration       go to state 10
    constDeclaration     go to state 11
    variable             go to state 12
    functionDeclaration  go to state 13


state 3

    0 $accept: program $end .

    $default  accept


state 4

    6 type: INT .

    $default  reduce using rule 6 (type)


state 5

    7 type: STR .

    $default  reduce using rule 7 (type)


state 6

    8 type: BOOL .

    $default  reduce using rule 8 (type)


state 7

   30 functionDeclaration: VOID . FUNCTION FUNCIDENTIFIER $@7 '(' $@8 functionParam ')' $@9 openScope $@10 stmtList closeScope

    FUNCTION  shift, and go to state 14


state 8

   19 constDeclaration: CONST . variable '=' expr ';'

    INT   shift, and go to state 4
    STR   shift, and go to state 5
    BOOL  shift, and go to state 6

    type      go to state 15
    variable  go to state 16


state 9

   20 variable: type . VARIDENTIFIER
   25 functionDeclaration: type . FUNCTION FUNCIDENTIFIER $@3 '(' $@4 functionParam ')' $@5 openScope $@6 stmtList closeScope

    VARIDENTIFIER  shift, and go to state 17
    FUNCTION       shift, and go to state 18


state 10

    3 function: function varDeclaration .

    $default  reduce using rule 3 (function)


state 11

    4 function: function constDeclaration .

    $default  reduce using rule 4 (function)


state 12

   17 varDeclaration: variable . ';'
   18               | variable . '=' expr ';'

    ';'  shift, and go to state 19
    '='  shift, and go to state 20


state 13

    2 function: function functionDeclaration .

    $default  reduce using rule 2 (function)


state 14

   30 functionDeclaration: VOID FUNCTION . FUNCIDENTIFIER $@7 '(' $@8 functionParam ')' $@9 openScope $@10 stmtList closeScope

    FUNCIDENTIFIER  shift, and go to state 21


state 15

   20 variable: type . VARIDENTIFIER

    VARIDENTIFIER  shift, and go to state 17


state 16

   19 constDeclaration: CONST variable . '=' expr ';'

    '='  shift, and go to state 22


state 17

   20 variable: type VARIDENTIFIER .

    $default  reduce using rule 20 (variable)


state 18

   25 functionDeclaration: type FUNCTION . FUNCIDENTIFIER $@3 '(' $@4 functionParam ')' $@5 openScope $@6 stmtList closeScope

    FUNCIDENTIFIER  shift, and go to state 23


state 19

   17 varDeclaration: variable ';' .

    $default  reduce using rule 17 (varDeclaration)


state 20

   18 varDeclaration: variable '=' . expr ';'

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 35
    lValue      go to state 36
    consValues  go to state 37


state 21

   30 functionDeclaration: VOID FUNCTION FUNCIDENTIFIER . $@7 '(' $@8 functionParam ')' $@9 openScope $@10 stmtList closeScope

    $default  reduce using rule 26 ($@7)

    $@7  go to state 38


state 22

   19 constDeclaration: CONST variable '=' . expr ';'

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 39
    lValue      go to state 36
    consValues  go to state 37


state 23

   25 functionDeclaration: type FUNCTION FUNCIDENTIFIER . $@3 '(' $@4 functionParam ')' $@5 openScope $@6 stmtList closeScope

    $default  reduce using rule 21 ($@3)

    $@3  go to state 40


state 24

  115 consValues: STRING .

    $default  reduce using rule 115 (consValues)


state 25

  114 consValues: INTEGER .

    $default  reduce using rule 114 (consValues)


state 26

  113 lValue: VARIDENTIFIER .

    $default  reduce using rule 113 (lValue)


state 27

  117 consValues: TRUEBOOL .

    $default  reduce using rule 117 (consValues)


state 28

  116 consValues: FALSEBOOL .

    $default  reduce using rule 116 (consValues)


state 29

   99 expr: NOT . expr

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 41
    lValue      go to state 36
    consValues  go to state 37


state 30

  105 expr: INC . lValue

    VARIDENTIFIER  shift, and go to state 26

    lValue  go to state 42


state 31

  107 expr: DEC . lValue

    VARIDENTIFIER  shift, and go to state 26

    lValue  go to state 43


state 32

   89 expr: FUNCIDENTIFIER . $@30 '(' functionArgs ')'

    $default  reduce using rule 88 ($@30)

    $@30  go to state 44


state 33

   87 expr: '-' . expr

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 45
    lValue      go to state 36
    consValues  go to state 37


state 34

  112 expr: '(' . expr ')'

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 46
    lValue      go to state 36
    consValues  go to state 37


state 35

   18 varDeclaration: variable '=' expr . ';'
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    OR   shift, and go to state 47
    AND  shift, and go to state 48
    ';'  shift, and go to state 49
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    NE   shift, and go to state 52
    EQ   shift, and go to state 53
    LE   shift, and go to state 54
    GE   shift, and go to state 55
    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60


state 36

   84 expr: lValue . '=' expr
   85     | lValue .
  100     | lValue . INCASSIGNMENT expr
  101     | lValue . DECASSIGNMENT expr
  102     | lValue . DIVIDEASSIGNMENT expr
  103     | lValue . MULTIPLYASSIGNMENT expr
  104     | lValue . INC
  106     | lValue . DEC

    INC                 shift, and go to state 61
    DEC                 shift, and go to state 62
    INCASSIGNMENT       shift, and go to state 63
    DECASSIGNMENT       shift, and go to state 64
    MULTIPLYASSIGNMENT  shift, and go to state 65
    DIVIDEASSIGNMENT    shift, and go to state 66
    '='                 shift, and go to state 67

    $default  reduce using rule 85 (expr)


state 37

   86 expr: consValues .

    $default  reduce using rule 86 (expr)


state 38

   30 functionDeclaration: VOID FUNCTION FUNCIDENTIFIER $@7 . '(' $@8 functionParam ')' $@9 openScope $@10 stmtList closeScope

    '('  shift, and go to state 68


state 39

   19 constDeclaration: CONST variable '=' expr . ';'
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    OR   shift, and go to state 47
    AND  shift, and go to state 48
    ';'  shift, and go to state 69
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    NE   shift, and go to state 52
    EQ   shift, and go to state 53
    LE   shift, and go to state 54
    GE   shift, and go to state 55
    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60


state 40

   25 functionDeclaration: type FUNCTION FUNCIDENTIFIER $@3 . '(' $@4 functionParam ')' $@5 openScope $@6 stmtList closeScope

    '('  shift, and go to state 70


state 41

   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
   99     | NOT expr .
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    $default  reduce using rule 99 (expr)


state 42

  105 expr: INC lValue .

    $default  reduce using rule 105 (expr)


state 43

  107 expr: DEC lValue .

    $default  reduce using rule 107 (expr)


state 44

   89 expr: FUNCIDENTIFIER $@30 . '(' functionArgs ')'

    '('  shift, and go to state 71


state 45

   87 expr: '-' expr .
   90     | expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    $default  reduce using rule 87 (expr)


state 46

   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr
  112     | '(' expr . ')'

    OR   shift, and go to state 47
    AND  shift, and go to state 48
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    NE   shift, and go to state 52
    EQ   shift, and go to state 53
    LE   shift, and go to state 54
    GE   shift, and go to state 55
    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60
    ')'  shift, and go to state 72


state 47

   97 expr: expr OR . expr

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 73
    lValue      go to state 36
    consValues  go to state 37


state 48

   98 expr: expr AND . expr

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 74
    lValue      go to state 36
    consValues  go to state 37


state 49

   18 varDeclaration: variable '=' expr ';' .

    $default  reduce using rule 18 (varDeclaration)


state 50

   95 expr: expr '>' . expr

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 75
    lValue      go to state 36
    consValues  go to state 37


state 51

   94 expr: expr '<' . expr

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 76
    lValue      go to state 36
    consValues  go to state 37


state 52

  110 expr: expr NE . expr

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 77
    lValue      go to state 36
    consValues  go to state 37


state 53

  111 expr: expr EQ . expr

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 78
    lValue      go to state 36
    consValues  go to state 37


state 54

  109 expr: expr LE . expr

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 79
    lValue      go to state 36
    consValues  go to state 37


state 55

  108 expr: expr GE . expr

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 80
    lValue      go to state 36
    consValues  go to state 37


state 56

   90 expr: expr '+' . expr

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 81
    lValue      go to state 36
    consValues  go to state 37


state 57

   91 expr: expr '-' . expr

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 82
    lValue      go to state 36
    consValues  go to state 37


state 58

   92 expr: expr '*' . expr

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 83
    lValue      go to state 36
    consValues  go to state 37


state 59

   93 expr: expr '/' . expr

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 84
    lValue      go to state 36
    consValues  go to state 37


state 60

   96 expr: expr '%' . expr

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 85
    lValue      go to state 36
    consValues  go to state 37


state 61

  104 expr: lValue INC .

    $default  reduce using rule 104 (expr)


state 62

  106 expr: lValue DEC .

    $default  reduce using rule 106 (expr)


state 63

  100 expr: lValue INCASSIGNMENT . expr

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 86
    lValue      go to state 36
    consValues  go to state 37


state 64

  101 expr: lValue DECASSIGNMENT . expr

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 87
    lValue      go to state 36
    consValues  go to state 37


state 65

  103 expr: lValue MULTIPLYASSIGNMENT . expr

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 88
    lValue      go to state 36
    consValues  go to state 37


state 66

  102 expr: lValue DIVIDEASSIGNMENT . expr

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 89
    lValue      go to state 36
    consValues  go to state 37


state 67

   84 expr: lValue '=' . expr

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 90
    lValue      go to state 36
    consValues  go to state 37


state 68

   30 functionDeclaration: VOID FUNCTION FUNCIDENTIFIER $@7 '(' . $@8 functionParam ')' $@9 openScope $@10 stmtList closeScope

    $default  reduce using rule 27 ($@8)

    $@8  go to state 91


state 69

   19 constDeclaration: CONST variable '=' expr ';' .

    $default  reduce using rule 19 (constDeclaration)


state 70

   25 functionDeclaration: type FUNCTION FUNCIDENTIFIER $@3 '(' . $@4 functionParam ')' $@5 openScope $@6 stmtList closeScope

    $default  reduce using rule 22 ($@4)

    $@4  go to state 92


state 71

   89 expr: FUNCIDENTIFIER $@30 '(' . functionArgs ')'

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    $default  reduce using rule 16 (functionArgs)

    functionArgs  go to state 93
    expr          go to state 94
    lValue        go to state 36
    consValues    go to state 37


state 72

  112 expr: '(' expr ')' .

    $default  reduce using rule 112 (expr)


state 73

   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   97     | expr OR expr .
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60

    $default  reduce using rule 97 (expr)


state 74

   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
   98     | expr AND expr .
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60

    $default  reduce using rule 98 (expr)


state 75

   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   95     | expr '>' expr .
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60

    $default  reduce using rule 95 (expr)


state 76

   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   94     | expr '<' expr .
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60

    $default  reduce using rule 94 (expr)


state 77

   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  110     | expr NE expr .
  111     | expr . EQ expr

    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60

    $default  reduce using rule 110 (expr)


state 78

   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr
  111     | expr EQ expr .

    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60

    $default  reduce using rule 111 (expr)


state 79

   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  109     | expr LE expr .
  110     | expr . NE expr
  111     | expr . EQ expr

    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60

    $default  reduce using rule 109 (expr)


state 80

   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  108     | expr GE expr .
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60

    $default  reduce using rule 108 (expr)


state 81

   90 expr: expr . '+' expr
   90     | expr '+' expr .
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60

    $default  reduce using rule 90 (expr)


state 82

   90 expr: expr . '+' expr
   91     | expr . '-' expr
   91     | expr '-' expr .
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60

    $default  reduce using rule 91 (expr)


state 83

   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   92     | expr '*' expr .
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    $default  reduce using rule 92 (expr)


state 84

   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   93     | expr '/' expr .
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    $default  reduce using rule 93 (expr)


state 85

   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   96     | expr '%' expr .
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    $default  reduce using rule 96 (expr)


state 86

   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  100     | lValue INCASSIGNMENT expr .
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    $default  reduce using rule 100 (expr)


state 87

   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  101     | lValue DECASSIGNMENT expr .
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    $default  reduce using rule 101 (expr)


state 88

   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  103     | lValue MULTIPLYASSIGNMENT expr .
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    $default  reduce using rule 103 (expr)


state 89

   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  102     | lValue DIVIDEASSIGNMENT expr .
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    $default  reduce using rule 102 (expr)


state 90

   84 expr: lValue '=' expr .
   90     | expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    OR   shift, and go to state 47
    AND  shift, and go to state 48
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    NE   shift, and go to state 52
    EQ   shift, and go to state 53
    LE   shift, and go to state 54
    GE   shift, and go to state 55
    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60

    $default  reduce using rule 84 (expr)


state 91

   30 functionDeclaration: VOID FUNCTION FUNCIDENTIFIER $@7 '(' $@8 . functionParam ')' $@9 openScope $@10 stmtList closeScope

    INT   shift, and go to state 4
    STR   shift, and go to state 5
    BOOL  shift, and go to state 6

    $default  reduce using rule 12 (functionParam)

    type           go to state 15
    functionParam  go to state 95
    variable       go to state 96


state 92

   25 functionDeclaration: type FUNCTION FUNCIDENTIFIER $@3 '(' $@4 . functionParam ')' $@5 openScope $@6 stmtList closeScope

    INT   shift, and go to state 4
    STR   shift, and go to state 5
    BOOL  shift, and go to state 6

    $default  reduce using rule 12 (functionParam)

    type           go to state 15
    functionParam  go to state 97
    variable       go to state 96


state 93

   89 expr: FUNCIDENTIFIER $@30 '(' functionArgs . ')'

    ')'  shift, and go to state 98


state 94

   13 functionArgs: expr .
   15             | expr . $@2 ',' functionArgs
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    OR   shift, and go to state 47
    AND  shift, and go to state 48
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    NE   shift, and go to state 52
    EQ   shift, and go to state 53
    LE   shift, and go to state 54
    GE   shift, and go to state 55
    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60

    ','       reduce using rule 14 ($@2)
    $default  reduce using rule 13 (functionArgs)

    $@2  go to state 99


state 95

   30 functionDeclaration: VOID FUNCTION FUNCIDENTIFIER $@7 '(' $@8 functionParam . ')' $@9 openScope $@10 stmtList closeScope

    ')'  shift, and go to state 100


state 96

    9 functionParam: variable .
   11              | variable . $@1 ',' functionParam

    ','       reduce using rule 10 ($@1)
    $default  reduce using rule 9 (functionParam)

    $@1  go to state 101


state 97

   25 functionDeclaration: type FUNCTION FUNCIDENTIFIER $@3 '(' $@4 functionParam . ')' $@5 openScope $@6 stmtList closeScope

    ')'  shift, and go to state 102


state 98

   89 expr: FUNCIDENTIFIER $@30 '(' functionArgs ')' .

    $default  reduce using rule 89 (expr)


state 99

   15 functionArgs: expr $@2 . ',' functionArgs

    ','  shift, and go to state 103


state 100

   30 functionDeclaration: VOID FUNCTION FUNCIDENTIFIER $@7 '(' $@8 functionParam ')' . $@9 openScope $@10 stmtList closeScope

    $default  reduce using rule 28 ($@9)

    $@9  go to state 104


state 101

   11 functionParam: variable $@1 . ',' functionParam

    ','  shift, and go to state 105


state 102

   25 functionDeclaration: type FUNCTION FUNCIDENTIFIER $@3 '(' $@4 functionParam ')' . $@5 openScope $@6 stmtList closeScope

    $default  reduce using rule 23 ($@5)

    $@5  go to state 106


state 103

   15 functionArgs: expr $@2 ',' . functionArgs

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    $default  reduce using rule 16 (functionArgs)

    functionArgs  go to state 107
    expr          go to state 94
    lValue        go to state 36
    consValues    go to state 37


state 104

   30 functionDeclaration: VOID FUNCTION FUNCIDENTIFIER $@7 '(' $@8 functionParam ')' $@9 . openScope $@10 stmtList closeScope

    '{'  shift, and go to state 108

    openScope  go to state 109


state 105

   11 functionParam: variable $@1 ',' . functionParam

    INT   shift, and go to state 4
    STR   shift, and go to state 5
    BOOL  shift, and go to state 6

    $default  reduce using rule 12 (functionParam)

    type           go to state 15
    functionParam  go to state 110
    variable       go to state 96


state 106

   25 functionDeclaration: type FUNCTION FUNCIDENTIFIER $@3 '(' $@4 functionParam ')' $@5 . openScope $@6 stmtList closeScope

    '{'  shift, and go to state 108

    openScope  go to state 111


state 107

   15 functionArgs: expr $@2 ',' functionArgs .

    $default  reduce using rule 15 (functionArgs)


state 108

  118 openScope: '{' .

    $default  reduce using rule 118 (openScope)


state 109

   30 functionDeclaration: VOID FUNCTION FUNCIDENTIFIER $@7 '(' $@8 functionParam ')' $@9 openScope . $@10 stmtList closeScope

    $default  reduce using rule 29 ($@10)

    $@10  go to state 112


state 110

   11 functionParam: variable $@1 ',' functionParam .

    $default  reduce using rule 11 (functionParam)


state 111

   25 functionDeclaration: type FUNCTION FUNCIDENTIFIER $@3 '(' $@4 functionParam ')' $@5 openScope . $@6 stmtList closeScope

    $default  reduce using rule 24 ($@6)

    $@6  go to state 113


state 112

   30 functionDeclaration: VOID FUNCTION FUNCIDENTIFIER $@7 '(' $@8 functionParam ')' $@9 openScope $@10 . stmtList closeScope

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    INT             shift, and go to state 4
    STR             shift, and go to state 5
    BOOL            shift, and go to state 6
    SWITCH          shift, and go to state 114
    CONST           shift, and go to state 8
    DO              shift, and go to state 115
    NOT             shift, and go to state 29
    RETURN          shift, and go to state 116
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    WHILE           shift, and go to state 117
    IF              shift, and go to state 118
    PRINT           shift, and go to state 119
    FOR             shift, and go to state 120
    CONTINUE        shift, and go to state 121
    BREAK           shift, and go to state 122
    ';'             shift, and go to state 123
    '-'             shift, and go to state 33
    '('             shift, and go to state 34
    '{'             shift, and go to state 108

    type              go to state 15
    varDeclaration    go to state 124
    constDeclaration  go to state 125
    variable          go to state 12
    stmtBlock         go to state 126
    stmt              go to state 127
    ifStmt            go to state 128
    returnStmt        go to state 129
    breakStmt         go to state 130
    continueStmt      go to state 131
    switchStmt        go to state 132
    whileStmt         go to state 133
    forStmt           go to state 134
    doStmt            go to state 135
    stmtList          go to state 136
    expr              go to state 137
    lValue            go to state 36
    consValues        go to state 37
    openScope         go to state 138


state 113

   25 functionDeclaration: type FUNCTION FUNCIDENTIFIER $@3 '(' $@4 functionParam ')' $@5 openScope $@6 . stmtList closeScope

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    INT             shift, and go to state 4
    STR             shift, and go to state 5
    BOOL            shift, and go to state 6
    SWITCH          shift, and go to state 114
    CONST           shift, and go to state 8
    DO              shift, and go to state 115
    NOT             shift, and go to state 29
    RETURN          shift, and go to state 116
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    WHILE           shift, and go to state 117
    IF              shift, and go to state 118
    PRINT           shift, and go to state 119
    FOR             shift, and go to state 120
    CONTINUE        shift, and go to state 121
    BREAK           shift, and go to state 122
    ';'             shift, and go to state 123
    '-'             shift, and go to state 33
    '('             shift, and go to state 34
    '{'             shift, and go to state 108

    type              go to state 15
    varDeclaration    go to state 124
    constDeclaration  go to state 125
    variable          go to state 12
    stmtBlock         go to state 126
    stmt              go to state 127
    ifStmt            go to state 128
    returnStmt        go to state 129
    breakStmt         go to state 130
    continueStmt      go to state 131
    switchStmt        go to state 132
    whileStmt         go to state 133
    forStmt           go to state 134
    doStmt            go to state 135
    stmtList          go to state 139
    expr              go to state 137
    lValue            go to state 36
    consValues        go to state 37
    openScope         go to state 138


state 114

   56 switchStmt: SWITCH . '(' expr ')' openScope $@13 caseStmts closeScope

    '('  shift, and go to state 140


state 115

   73 doStmt: DO . openScope $@22 stmtList closeScope $@23 WHILE '(' expr ')' ';'

    '{'  shift, and go to state 108

    openScope  go to state 141


state 116

   51 returnStmt: RETURN . expr ';'
   52           | RETURN . ';'

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    ';'             shift, and go to state 142
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 143
    lValue      go to state 36
    consValues  go to state 37


state 117

   67 whileStmt: WHILE . '(' $@18 expr ')' openScope $@19 stmtList closeScope

    '('  shift, and go to state 144


state 118

   47 ifStmt: IF . '(' expr ')' $@11 stmt ifContinue

    '('  shift, and go to state 145


state 119

   34 stmt: PRINT . '(' expr ')' ';'

    '('  shift, and go to state 146


state 120

   70 forStmt: FOR . '(' $@20 loopExpression ')' openScope $@21 stmtList closeScope

    '('  shift, and go to state 147


state 121

   54 continueStmt: CONTINUE . ';'

    ';'  shift, and go to state 148


state 122

   53 breakStmt: BREAK . ';'

    ';'  shift, and go to state 149


state 123

   32 stmt: ';' .

    $default  reduce using rule 32 (stmt)


state 124

   42 stmt: varDeclaration .

    $default  reduce using rule 42 (stmt)


state 125

   43 stmt: constDeclaration .

    $default  reduce using rule 43 (stmt)


state 126

   41 stmt: stmtBlock .

    $default  reduce using rule 41 (stmt)


state 127

   82 stmtList: stmt .

    $default  reduce using rule 82 (stmtList)


state 128

   40 stmt: ifStmt .

    $default  reduce using rule 40 (stmt)


state 129

   44 stmt: returnStmt .

    $default  reduce using rule 44 (stmt)


state 130

   39 stmt: breakStmt .

    $default  reduce using rule 39 (stmt)


state 131

   38 stmt: continueStmt .

    $default  reduce using rule 38 (stmt)


state 132

   45 stmt: switchStmt .

    $default  reduce using rule 45 (stmt)


state 133

   35 stmt: whileStmt .

    $default  reduce using rule 35 (stmt)


state 134

   37 stmt: forStmt .

    $default  reduce using rule 37 (stmt)


state 135

   36 stmt: doStmt .

    $default  reduce using rule 36 (stmt)


state 136

   30 functionDeclaration: VOID FUNCTION FUNCIDENTIFIER $@7 '(' $@8 functionParam ')' $@9 openScope $@10 stmtList . closeScope
   83 stmtList: stmtList . stmt

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    INT             shift, and go to state 4
    STR             shift, and go to state 5
    BOOL            shift, and go to state 6
    SWITCH          shift, and go to state 114
    CONST           shift, and go to state 8
    DO              shift, and go to state 115
    NOT             shift, and go to state 29
    RETURN          shift, and go to state 116
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    WHILE           shift, and go to state 117
    IF              shift, and go to state 118
    PRINT           shift, and go to state 119
    FOR             shift, and go to state 120
    CONTINUE        shift, and go to state 121
    BREAK           shift, and go to state 122
    ';'             shift, and go to state 123
    '-'             shift, and go to state 33
    '('             shift, and go to state 34
    '{'             shift, and go to state 108
    '}'             shift, and go to state 150

    type              go to state 15
    varDeclaration    go to state 124
    constDeclaration  go to state 125
    variable          go to state 12
    stmtBlock         go to state 126
    stmt              go to state 151
    ifStmt            go to state 128
    returnStmt        go to state 129
    breakStmt         go to state 130
    continueStmt      go to state 131
    switchStmt        go to state 132
    whileStmt         go to state 133
    forStmt           go to state 134
    doStmt            go to state 135
    expr              go to state 137
    lValue            go to state 36
    consValues        go to state 37
    openScope         go to state 138
    closeScope        go to state 152


state 137

   33 stmt: expr . ';'
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    OR   shift, and go to state 47
    AND  shift, and go to state 48
    ';'  shift, and go to state 153
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    NE   shift, and go to state 52
    EQ   shift, and go to state 53
    LE   shift, and go to state 54
    GE   shift, and go to state 55
    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60


state 138

   31 stmtBlock: openScope . stmtList closeScope

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    INT             shift, and go to state 4
    STR             shift, and go to state 5
    BOOL            shift, and go to state 6
    SWITCH          shift, and go to state 114
    CONST           shift, and go to state 8
    DO              shift, and go to state 115
    NOT             shift, and go to state 29
    RETURN          shift, and go to state 116
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    WHILE           shift, and go to state 117
    IF              shift, and go to state 118
    PRINT           shift, and go to state 119
    FOR             shift, and go to state 120
    CONTINUE        shift, and go to state 121
    BREAK           shift, and go to state 122
    ';'             shift, and go to state 123
    '-'             shift, and go to state 33
    '('             shift, and go to state 34
    '{'             shift, and go to state 108

    type              go to state 15
    varDeclaration    go to state 124
    constDeclaration  go to state 125
    variable          go to state 12
    stmtBlock         go to state 126
    stmt              go to state 127
    ifStmt            go to state 128
    returnStmt        go to state 129
    breakStmt         go to state 130
    continueStmt      go to state 131
    switchStmt        go to state 132
    whileStmt         go to state 133
    forStmt           go to state 134
    doStmt            go to state 135
    stmtList          go to state 154
    expr              go to state 137
    lValue            go to state 36
    consValues        go to state 37
    openScope         go to state 138


state 139

   25 functionDeclaration: type FUNCTION FUNCIDENTIFIER $@3 '(' $@4 functionParam ')' $@5 openScope $@6 stmtList . closeScope
   83 stmtList: stmtList . stmt

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    INT             shift, and go to state 4
    STR             shift, and go to state 5
    BOOL            shift, and go to state 6
    SWITCH          shift, and go to state 114
    CONST           shift, and go to state 8
    DO              shift, and go to state 115
    NOT             shift, and go to state 29
    RETURN          shift, and go to state 116
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    WHILE           shift, and go to state 117
    IF              shift, and go to state 118
    PRINT           shift, and go to state 119
    FOR             shift, and go to state 120
    CONTINUE        shift, and go to state 121
    BREAK           shift, and go to state 122
    ';'             shift, and go to state 123
    '-'             shift, and go to state 33
    '('             shift, and go to state 34
    '{'             shift, and go to state 108
    '}'             shift, and go to state 150

    type              go to state 15
    varDeclaration    go to state 124
    constDeclaration  go to state 125
    variable          go to state 12
    stmtBlock         go to state 126
    stmt              go to state 151
    ifStmt            go to state 128
    returnStmt        go to state 129
    breakStmt         go to state 130
    continueStmt      go to state 131
    switchStmt        go to state 132
    whileStmt         go to state 133
    forStmt           go to state 134
    doStmt            go to state 135
    expr              go to state 137
    lValue            go to state 36
    consValues        go to state 37
    openScope         go to state 138
    closeScope        go to state 155


state 140

   56 switchStmt: SWITCH '(' . expr ')' openScope $@13 caseStmts closeScope

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 156
    lValue      go to state 36
    consValues  go to state 37


state 141

   73 doStmt: DO openScope . $@22 stmtList closeScope $@23 WHILE '(' expr ')' ';'

    $default  reduce using rule 71 ($@22)

    $@22  go to state 157


state 142

   52 returnStmt: RETURN ';' .

    $default  reduce using rule 52 (returnStmt)


state 143

   51 returnStmt: RETURN expr . ';'
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    OR   shift, and go to state 47
    AND  shift, and go to state 48
    ';'  shift, and go to state 158
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    NE   shift, and go to state 52
    EQ   shift, and go to state 53
    LE   shift, and go to state 54
    GE   shift, and go to state 55
    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60


state 144

   67 whileStmt: WHILE '(' . $@18 expr ')' openScope $@19 stmtList closeScope

    $default  reduce using rule 65 ($@18)

    $@18  go to state 159


state 145

   47 ifStmt: IF '(' . expr ')' $@11 stmt ifContinue

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 160
    lValue      go to state 36
    consValues  go to state 37


state 146

   34 stmt: PRINT '(' . expr ')' ';'

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 161
    lValue      go to state 36
    consValues  go to state 37


state 147

   70 forStmt: FOR '(' . $@20 loopExpression ')' openScope $@21 stmtList closeScope

    $default  reduce using rule 68 ($@20)

    $@20  go to state 162


state 148

   54 continueStmt: CONTINUE ';' .

    $default  reduce using rule 54 (continueStmt)


state 149

   53 breakStmt: BREAK ';' .

    $default  reduce using rule 53 (breakStmt)


state 150

  119 closeScope: '}' .

    $default  reduce using rule 119 (closeScope)


state 151

   83 stmtList: stmtList stmt .

    $default  reduce using rule 83 (stmtList)


state 152

   30 functionDeclaration: VOID FUNCTION FUNCIDENTIFIER $@7 '(' $@8 functionParam ')' $@9 openScope $@10 stmtList closeScope .

    $default  reduce using rule 30 (functionDeclaration)


state 153

   33 stmt: expr ';' .

    $default  reduce using rule 33 (stmt)


state 154

   31 stmtBlock: openScope stmtList . closeScope
   83 stmtList: stmtList . stmt

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    INT             shift, and go to state 4
    STR             shift, and go to state 5
    BOOL            shift, and go to state 6
    SWITCH          shift, and go to state 114
    CONST           shift, and go to state 8
    DO              shift, and go to state 115
    NOT             shift, and go to state 29
    RETURN          shift, and go to state 116
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    WHILE           shift, and go to state 117
    IF              shift, and go to state 118
    PRINT           shift, and go to state 119
    FOR             shift, and go to state 120
    CONTINUE        shift, and go to state 121
    BREAK           shift, and go to state 122
    ';'             shift, and go to state 123
    '-'             shift, and go to state 33
    '('             shift, and go to state 34
    '{'             shift, and go to state 108
    '}'             shift, and go to state 150

    type              go to state 15
    varDeclaration    go to state 124
    constDeclaration  go to state 125
    variable          go to state 12
    stmtBlock         go to state 126
    stmt              go to state 151
    ifStmt            go to state 128
    returnStmt        go to state 129
    breakStmt         go to state 130
    continueStmt      go to state 131
    switchStmt        go to state 132
    whileStmt         go to state 133
    forStmt           go to state 134
    doStmt            go to state 135
    expr              go to state 137
    lValue            go to state 36
    consValues        go to state 37
    openScope         go to state 138
    closeScope        go to state 163


state 155

   25 functionDeclaration: type FUNCTION FUNCIDENTIFIER $@3 '(' $@4 functionParam ')' $@5 openScope $@6 stmtList closeScope .

    $default  reduce using rule 25 (functionDeclaration)


state 156

   56 switchStmt: SWITCH '(' expr . ')' openScope $@13 caseStmts closeScope
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    OR   shift, and go to state 47
    AND  shift, and go to state 48
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    NE   shift, and go to state 52
    EQ   shift, and go to state 53
    LE   shift, and go to state 54
    GE   shift, and go to state 55
    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60
    ')'  shift, and go to state 164


state 157

   73 doStmt: DO openScope $@22 . stmtList closeScope $@23 WHILE '(' expr ')' ';'

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    INT             shift, and go to state 4
    STR             shift, and go to state 5
    BOOL            shift, and go to state 6
    SWITCH          shift, and go to state 114
    CONST           shift, and go to state 8
    DO              shift, and go to state 115
    NOT             shift, and go to state 29
    RETURN          shift, and go to state 116
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    WHILE           shift, and go to state 117
    IF              shift, and go to state 118
    PRINT           shift, and go to state 119
    FOR             shift, and go to state 120
    CONTINUE        shift, and go to state 121
    BREAK           shift, and go to state 122
    ';'             shift, and go to state 123
    '-'             shift, and go to state 33
    '('             shift, and go to state 34
    '{'             shift, and go to state 108

    type              go to state 15
    varDeclaration    go to state 124
    constDeclaration  go to state 125
    variable          go to state 12
    stmtBlock         go to state 126
    stmt              go to state 127
    ifStmt            go to state 128
    returnStmt        go to state 129
    breakStmt         go to state 130
    continueStmt      go to state 131
    switchStmt        go to state 132
    whileStmt         go to state 133
    forStmt           go to state 134
    doStmt            go to state 135
    stmtList          go to state 165
    expr              go to state 137
    lValue            go to state 36
    consValues        go to state 37
    openScope         go to state 138


state 158

   51 returnStmt: RETURN expr ';' .

    $default  reduce using rule 51 (returnStmt)


state 159

   67 whileStmt: WHILE '(' $@18 . expr ')' openScope $@19 stmtList closeScope

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 166
    lValue      go to state 36
    consValues  go to state 37


state 160

   47 ifStmt: IF '(' expr . ')' $@11 stmt ifContinue
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    OR   shift, and go to state 47
    AND  shift, and go to state 48
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    NE   shift, and go to state 52
    EQ   shift, and go to state 53
    LE   shift, and go to state 54
    GE   shift, and go to state 55
    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60
    ')'  shift, and go to state 167


state 161

   34 stmt: PRINT '(' expr . ')' ';'
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    OR   shift, and go to state 47
    AND  shift, and go to state 48
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    NE   shift, and go to state 52
    EQ   shift, and go to state 53
    LE   shift, and go to state 54
    GE   shift, and go to state 55
    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60
    ')'  shift, and go to state 168


state 162

   70 forStmt: FOR '(' $@20 . loopExpression ')' openScope $@21 stmtList closeScope

    VARIDENTIFIER  shift, and go to state 169
    INT            shift, and go to state 170

    loopExpression  go to state 171


state 163

   31 stmtBlock: openScope stmtList closeScope .

    $default  reduce using rule 31 (stmtBlock)


state 164

   56 switchStmt: SWITCH '(' expr ')' . openScope $@13 caseStmts closeScope

    '{'  shift, and go to state 108

    openScope  go to state 172


state 165

   73 doStmt: DO openScope $@22 stmtList . closeScope $@23 WHILE '(' expr ')' ';'
   83 stmtList: stmtList . stmt

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    INT             shift, and go to state 4
    STR             shift, and go to state 5
    BOOL            shift, and go to state 6
    SWITCH          shift, and go to state 114
    CONST           shift, and go to state 8
    DO              shift, and go to state 115
    NOT             shift, and go to state 29
    RETURN          shift, and go to state 116
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    WHILE           shift, and go to state 117
    IF              shift, and go to state 118
    PRINT           shift, and go to state 119
    FOR             shift, and go to state 120
    CONTINUE        shift, and go to state 121
    BREAK           shift, and go to state 122
    ';'             shift, and go to state 123
    '-'             shift, and go to state 33
    '('             shift, and go to state 34
    '{'             shift, and go to state 108
    '}'             shift, and go to state 150

    type              go to state 15
    varDeclaration    go to state 124
    constDeclaration  go to state 125
    variable          go to state 12
    stmtBlock         go to state 126
    stmt              go to state 151
    ifStmt            go to state 128
    returnStmt        go to state 129
    breakStmt         go to state 130
    continueStmt      go to state 131
    switchStmt        go to state 132
    whileStmt         go to state 133
    forStmt           go to state 134
    doStmt            go to state 135
    expr              go to state 137
    lValue            go to state 36
    consValues        go to state 37
    openScope         go to state 138
    closeScope        go to state 173


state 166

   67 whileStmt: WHILE '(' $@18 expr . ')' openScope $@19 stmtList closeScope
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    OR   shift, and go to state 47
    AND  shift, and go to state 48
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    NE   shift, and go to state 52
    EQ   shift, and go to state 53
    LE   shift, and go to state 54
    GE   shift, and go to state 55
    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60
    ')'  shift, and go to state 174


state 167

   47 ifStmt: IF '(' expr ')' . $@11 stmt ifContinue

    $default  reduce using rule 46 ($@11)

    $@11  go to state 175


state 168

   34 stmt: PRINT '(' expr ')' . ';'

    ';'  shift, and go to state 176


state 169

   81 loopExpression: VARIDENTIFIER . $@27 '=' expr $@28 ';' expr $@29 ';' expr

    $default  reduce using rule 78 ($@27)

    $@27  go to state 177


state 170

   77 loopExpression: INT . VARIDENTIFIER $@24 '=' expr $@25 ';' expr $@26 ';' expr

    VARIDENTIFIER  shift, and go to state 178


state 171

   70 forStmt: FOR '(' $@20 loopExpression . ')' openScope $@21 stmtList closeScope

    ')'  shift, and go to state 179


state 172

   56 switchStmt: SWITCH '(' expr ')' openScope . $@13 caseStmts closeScope

    $default  reduce using rule 55 ($@13)

    $@13  go to state 180


state 173

   73 doStmt: DO openScope $@22 stmtList closeScope . $@23 WHILE '(' expr ')' ';'

    $default  reduce using rule 72 ($@23)

    $@23  go to state 181


state 174

   67 whileStmt: WHILE '(' $@18 expr ')' . openScope $@19 stmtList closeScope

    '{'  shift, and go to state 108

    openScope  go to state 182


state 175

   47 ifStmt: IF '(' expr ')' $@11 . stmt ifContinue

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    INT             shift, and go to state 4
    STR             shift, and go to state 5
    BOOL            shift, and go to state 6
    SWITCH          shift, and go to state 114
    CONST           shift, and go to state 8
    DO              shift, and go to state 115
    NOT             shift, and go to state 29
    RETURN          shift, and go to state 116
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    WHILE           shift, and go to state 117
    IF              shift, and go to state 118
    PRINT           shift, and go to state 119
    FOR             shift, and go to state 120
    CONTINUE        shift, and go to state 121
    BREAK           shift, and go to state 122
    ';'             shift, and go to state 123
    '-'             shift, and go to state 33
    '('             shift, and go to state 34
    '{'             shift, and go to state 108

    type              go to state 15
    varDeclaration    go to state 124
    constDeclaration  go to state 125
    variable          go to state 12
    stmtBlock         go to state 126
    stmt              go to state 183
    ifStmt            go to state 128
    returnStmt        go to state 129
    breakStmt         go to state 130
    continueStmt      go to state 131
    switchStmt        go to state 132
    whileStmt         go to state 133
    forStmt           go to state 134
    doStmt            go to state 135
    expr              go to state 137
    lValue            go to state 36
    consValues        go to state 37
    openScope         go to state 138


state 176

   34 stmt: PRINT '(' expr ')' ';' .

    $default  reduce using rule 34 (stmt)


state 177

   81 loopExpression: VARIDENTIFIER $@27 . '=' expr $@28 ';' expr $@29 ';' expr

    '='  shift, and go to state 184


state 178

   77 loopExpression: INT VARIDENTIFIER . $@24 '=' expr $@25 ';' expr $@26 ';' expr

    $default  reduce using rule 74 ($@24)

    $@24  go to state 185


state 179

   70 forStmt: FOR '(' $@20 loopExpression ')' . openScope $@21 stmtList closeScope

    '{'  shift, and go to state 108

    openScope  go to state 186


state 180

   56 switchStmt: SWITCH '(' expr ')' openScope $@13 . caseStmts closeScope

    CASE     shift, and go to state 187
    DEFAULT  shift, and go to state 188

    caseStmts  go to state 189
    caseStmt   go to state 190


state 181

   73 doStmt: DO openScope $@22 stmtList closeScope $@23 . WHILE '(' expr ')' ';'

    WHILE  shift, and go to state 191


state 182

   67 whileStmt: WHILE '(' $@18 expr ')' openScope . $@19 stmtList closeScope

    $default  reduce using rule 66 ($@19)

    $@19  go to state 192


state 183

   47 ifStmt: IF '(' expr ')' $@11 stmt . ifContinue

    ELSE  shift, and go to state 193

    $default  reduce using rule 48 (ifContinue)

    ifContinue  go to state 194


state 184

   81 loopExpression: VARIDENTIFIER $@27 '=' . expr $@28 ';' expr $@29 ';' expr

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 195
    lValue      go to state 36
    consValues  go to state 37


state 185

   77 loopExpression: INT VARIDENTIFIER $@24 . '=' expr $@25 ';' expr $@26 ';' expr

    '='  shift, and go to state 196


state 186

   70 forStmt: FOR '(' $@20 loopExpression ')' openScope . $@21 stmtList closeScope

    $default  reduce using rule 69 ($@21)

    $@21  go to state 197


state 187

   62 caseStmt: CASE . $@14 expr $@15 ':' $@16 stmtList

    $default  reduce using rule 59 ($@14)

    $@14  go to state 198


state 188

   64 caseStmt: DEFAULT . $@17 ':' stmtList

    $default  reduce using rule 63 ($@17)

    $@17  go to state 199


state 189

   56 switchStmt: SWITCH '(' expr ')' openScope $@13 caseStmts . closeScope

    '}'  shift, and go to state 150

    closeScope  go to state 200


state 190

   57 caseStmts: caseStmt . caseStmts
   58          | caseStmt .

    CASE     shift, and go to state 187
    DEFAULT  shift, and go to state 188

    $default  reduce using rule 58 (caseStmts)

    caseStmts  go to state 201
    caseStmt   go to state 190


state 191

   73 doStmt: DO openScope $@22 stmtList closeScope $@23 WHILE . '(' expr ')' ';'

    '('  shift, and go to state 202


state 192

   67 whileStmt: WHILE '(' $@18 expr ')' openScope $@19 . stmtList closeScope

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    INT             shift, and go to state 4
    STR             shift, and go to state 5
    BOOL            shift, and go to state 6
    SWITCH          shift, and go to state 114
    CONST           shift, and go to state 8
    DO              shift, and go to state 115
    NOT             shift, and go to state 29
    RETURN          shift, and go to state 116
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    WHILE           shift, and go to state 117
    IF              shift, and go to state 118
    PRINT           shift, and go to state 119
    FOR             shift, and go to state 120
    CONTINUE        shift, and go to state 121
    BREAK           shift, and go to state 122
    ';'             shift, and go to state 123
    '-'             shift, and go to state 33
    '('             shift, and go to state 34
    '{'             shift, and go to state 108

    type              go to state 15
    varDeclaration    go to state 124
    constDeclaration  go to state 125
    variable          go to state 12
    stmtBlock         go to state 126
    stmt              go to state 127
    ifStmt            go to state 128
    returnStmt        go to state 129
    breakStmt         go to state 130
    continueStmt      go to state 131
    switchStmt        go to state 132
    whileStmt         go to state 133
    forStmt           go to state 134
    doStmt            go to state 135
    stmtList          go to state 203
    expr              go to state 137
    lValue            go to state 36
    consValues        go to state 37
    openScope         go to state 138


state 193

   50 ifContinue: ELSE . $@12 stmt

    $default  reduce using rule 49 ($@12)

    $@12  go to state 204


state 194

   47 ifStmt: IF '(' expr ')' $@11 stmt ifContinue .

    $default  reduce using rule 47 (ifStmt)


state 195

   81 loopExpression: VARIDENTIFIER $@27 '=' expr . $@28 ';' expr $@29 ';' expr
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    OR   shift, and go to state 47
    AND  shift, and go to state 48
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    NE   shift, and go to state 52
    EQ   shift, and go to state 53
    LE   shift, and go to state 54
    GE   shift, and go to state 55
    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60

    $default  reduce using rule 79 ($@28)

    $@28  go to state 205


state 196

   77 loopExpression: INT VARIDENTIFIER $@24 '=' . expr $@25 ';' expr $@26 ';' expr

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 206
    lValue      go to state 36
    consValues  go to state 37


state 197

   70 forStmt: FOR '(' $@20 loopExpression ')' openScope $@21 . stmtList closeScope

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    INT             shift, and go to state 4
    STR             shift, and go to state 5
    BOOL            shift, and go to state 6
    SWITCH          shift, and go to state 114
    CONST           shift, and go to state 8
    DO              shift, and go to state 115
    NOT             shift, and go to state 29
    RETURN          shift, and go to state 116
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    WHILE           shift, and go to state 117
    IF              shift, and go to state 118
    PRINT           shift, and go to state 119
    FOR             shift, and go to state 120
    CONTINUE        shift, and go to state 121
    BREAK           shift, and go to state 122
    ';'             shift, and go to state 123
    '-'             shift, and go to state 33
    '('             shift, and go to state 34
    '{'             shift, and go to state 108

    type              go to state 15
    varDeclaration    go to state 124
    constDeclaration  go to state 125
    variable          go to state 12
    stmtBlock         go to state 126
    stmt              go to state 127
    ifStmt            go to state 128
    returnStmt        go to state 129
    breakStmt         go to state 130
    continueStmt      go to state 131
    switchStmt        go to state 132
    whileStmt         go to state 133
    forStmt           go to state 134
    doStmt            go to state 135
    stmtList          go to state 207
    expr              go to state 137
    lValue            go to state 36
    consValues        go to state 37
    openScope         go to state 138


state 198

   62 caseStmt: CASE $@14 . expr $@15 ':' $@16 stmtList

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 208
    lValue      go to state 36
    consValues  go to state 37


state 199

   64 caseStmt: DEFAULT $@17 . ':' stmtList

    ':'  shift, and go to state 209


state 200

   56 switchStmt: SWITCH '(' expr ')' openScope $@13 caseStmts closeScope .

    $default  reduce using rule 56 (switchStmt)


state 201

   57 caseStmts: caseStmt caseStmts .

    $default  reduce using rule 57 (caseStmts)


state 202

   73 doStmt: DO openScope $@22 stmtList closeScope $@23 WHILE '(' . expr ')' ';'

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 210
    lValue      go to state 36
    consValues  go to state 37


state 203

   67 whileStmt: WHILE '(' $@18 expr ')' openScope $@19 stmtList . closeScope
   83 stmtList: stmtList . stmt

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    INT             shift, and go to state 4
    STR             shift, and go to state 5
    BOOL            shift, and go to state 6
    SWITCH          shift, and go to state 114
    CONST           shift, and go to state 8
    DO              shift, and go to state 115
    NOT             shift, and go to state 29
    RETURN          shift, and go to state 116
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    WHILE           shift, and go to state 117
    IF              shift, and go to state 118
    PRINT           shift, and go to state 119
    FOR             shift, and go to state 120
    CONTINUE        shift, and go to state 121
    BREAK           shift, and go to state 122
    ';'             shift, and go to state 123
    '-'             shift, and go to state 33
    '('             shift, and go to state 34
    '{'             shift, and go to state 108
    '}'             shift, and go to state 150

    type              go to state 15
    varDeclaration    go to state 124
    constDeclaration  go to state 125
    variable          go to state 12
    stmtBlock         go to state 126
    stmt              go to state 151
    ifStmt            go to state 128
    returnStmt        go to state 129
    breakStmt         go to state 130
    continueStmt      go to state 131
    switchStmt        go to state 132
    whileStmt         go to state 133
    forStmt           go to state 134
    doStmt            go to state 135
    expr              go to state 137
    lValue            go to state 36
    consValues        go to state 37
    openScope         go to state 138
    closeScope        go to state 211


state 204

   50 ifContinue: ELSE $@12 . stmt

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    INT             shift, and go to state 4
    STR             shift, and go to state 5
    BOOL            shift, and go to state 6
    SWITCH          shift, and go to state 114
    CONST           shift, and go to state 8
    DO              shift, and go to state 115
    NOT             shift, and go to state 29
    RETURN          shift, and go to state 116
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    WHILE           shift, and go to state 117
    IF              shift, and go to state 118
    PRINT           shift, and go to state 119
    FOR             shift, and go to state 120
    CONTINUE        shift, and go to state 121
    BREAK           shift, and go to state 122
    ';'             shift, and go to state 123
    '-'             shift, and go to state 33
    '('             shift, and go to state 34
    '{'             shift, and go to state 108

    type              go to state 15
    varDeclaration    go to state 124
    constDeclaration  go to state 125
    variable          go to state 12
    stmtBlock         go to state 126
    stmt              go to state 212
    ifStmt            go to state 128
    returnStmt        go to state 129
    breakStmt         go to state 130
    continueStmt      go to state 131
    switchStmt        go to state 132
    whileStmt         go to state 133
    forStmt           go to state 134
    doStmt            go to state 135
    expr              go to state 137
    lValue            go to state 36
    consValues        go to state 37
    openScope         go to state 138


state 205

   81 loopExpression: VARIDENTIFIER $@27 '=' expr $@28 . ';' expr $@29 ';' expr

    ';'  shift, and go to state 213


state 206

   77 loopExpression: INT VARIDENTIFIER $@24 '=' expr . $@25 ';' expr $@26 ';' expr
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    OR   shift, and go to state 47
    AND  shift, and go to state 48
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    NE   shift, and go to state 52
    EQ   shift, and go to state 53
    LE   shift, and go to state 54
    GE   shift, and go to state 55
    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60

    $default  reduce using rule 75 ($@25)

    $@25  go to state 214


state 207

   70 forStmt: FOR '(' $@20 loopExpression ')' openScope $@21 stmtList . closeScope
   83 stmtList: stmtList . stmt

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    INT             shift, and go to state 4
    STR             shift, and go to state 5
    BOOL            shift, and go to state 6
    SWITCH          shift, and go to state 114
    CONST           shift, and go to state 8
    DO              shift, and go to state 115
    NOT             shift, and go to state 29
    RETURN          shift, and go to state 116
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    WHILE           shift, and go to state 117
    IF              shift, and go to state 118
    PRINT           shift, and go to state 119
    FOR             shift, and go to state 120
    CONTINUE        shift, and go to state 121
    BREAK           shift, and go to state 122
    ';'             shift, and go to state 123
    '-'             shift, and go to state 33
    '('             shift, and go to state 34
    '{'             shift, and go to state 108
    '}'             shift, and go to state 150

    type              go to state 15
    varDeclaration    go to state 124
    constDeclaration  go to state 125
    variable          go to state 12
    stmtBlock         go to state 126
    stmt              go to state 151
    ifStmt            go to state 128
    returnStmt        go to state 129
    breakStmt         go to state 130
    continueStmt      go to state 131
    switchStmt        go to state 132
    whileStmt         go to state 133
    forStmt           go to state 134
    doStmt            go to state 135
    expr              go to state 137
    lValue            go to state 36
    consValues        go to state 37
    openScope         go to state 138
    closeScope        go to state 215


state 208

   62 caseStmt: CASE $@14 expr . $@15 ':' $@16 stmtList
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    OR   shift, and go to state 47
    AND  shift, and go to state 48
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    NE   shift, and go to state 52
    EQ   shift, and go to state 53
    LE   shift, and go to state 54
    GE   shift, and go to state 55
    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60

    $default  reduce using rule 60 ($@15)

    $@15  go to state 216


state 209

   64 caseStmt: DEFAULT $@17 ':' . stmtList

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    INT             shift, and go to state 4
    STR             shift, and go to state 5
    BOOL            shift, and go to state 6
    SWITCH          shift, and go to state 114
    CONST           shift, and go to state 8
    DO              shift, and go to state 115
    NOT             shift, and go to state 29
    RETURN          shift, and go to state 116
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    WHILE           shift, and go to state 117
    IF              shift, and go to state 118
    PRINT           shift, and go to state 119
    FOR             shift, and go to state 120
    CONTINUE        shift, and go to state 121
    BREAK           shift, and go to state 122
    ';'             shift, and go to state 123
    '-'             shift, and go to state 33
    '('             shift, and go to state 34
    '{'             shift, and go to state 108

    type              go to state 15
    varDeclaration    go to state 124
    constDeclaration  go to state 125
    variable          go to state 12
    stmtBlock         go to state 126
    stmt              go to state 127
    ifStmt            go to state 128
    returnStmt        go to state 129
    breakStmt         go to state 130
    continueStmt      go to state 131
    switchStmt        go to state 132
    whileStmt         go to state 133
    forStmt           go to state 134
    doStmt            go to state 135
    stmtList          go to state 217
    expr              go to state 137
    lValue            go to state 36
    consValues        go to state 37
    openScope         go to state 138


state 210

   73 doStmt: DO openScope $@22 stmtList closeScope $@23 WHILE '(' expr . ')' ';'
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    OR   shift, and go to state 47
    AND  shift, and go to state 48
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    NE   shift, and go to state 52
    EQ   shift, and go to state 53
    LE   shift, and go to state 54
    GE   shift, and go to state 55
    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60
    ')'  shift, and go to state 218


state 211

   67 whileStmt: WHILE '(' $@18 expr ')' openScope $@19 stmtList closeScope .

    $default  reduce using rule 67 (whileStmt)


state 212

   50 ifContinue: ELSE $@12 stmt .

    $default  reduce using rule 50 (ifContinue)


state 213

   81 loopExpression: VARIDENTIFIER $@27 '=' expr $@28 ';' . expr $@29 ';' expr

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 219
    lValue      go to state 36
    consValues  go to state 37


state 214

   77 loopExpression: INT VARIDENTIFIER $@24 '=' expr $@25 . ';' expr $@26 ';' expr

    ';'  shift, and go to state 220


state 215

   70 forStmt: FOR '(' $@20 loopExpression ')' openScope $@21 stmtList closeScope .

    $default  reduce using rule 70 (forStmt)


state 216

   62 caseStmt: CASE $@14 expr $@15 . ':' $@16 stmtList

    ':'  shift, and go to state 221


state 217

   64 caseStmt: DEFAULT $@17 ':' stmtList .
   83 stmtList: stmtList . stmt

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    INT             shift, and go to state 4
    STR             shift, and go to state 5
    BOOL            shift, and go to state 6
    SWITCH          shift, and go to state 114
    CONST           shift, and go to state 8
    DO              shift, and go to state 115
    NOT             shift, and go to state 29
    RETURN          shift, and go to state 116
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    WHILE           shift, and go to state 117
    IF              shift, and go to state 118
    PRINT           shift, and go to state 119
    FOR             shift, and go to state 120
    CONTINUE        shift, and go to state 121
    BREAK           shift, and go to state 122
    ';'             shift, and go to state 123
    '-'             shift, and go to state 33
    '('             shift, and go to state 34
    '{'             shift, and go to state 108

    $default  reduce using rule 64 (caseStmt)

    type              go to state 15
    varDeclaration    go to state 124
    constDeclaration  go to state 125
    variable          go to state 12
    stmtBlock         go to state 126
    stmt              go to state 151
    ifStmt            go to state 128
    returnStmt        go to state 129
    breakStmt         go to state 130
    continueStmt      go to state 131
    switchStmt        go to state 132
    whileStmt         go to state 133
    forStmt           go to state 134
    doStmt            go to state 135
    expr              go to state 137
    lValue            go to state 36
    consValues        go to state 37
    openScope         go to state 138


state 218

   73 doStmt: DO openScope $@22 stmtList closeScope $@23 WHILE '(' expr ')' . ';'

    ';'  shift, and go to state 222


state 219

   81 loopExpression: VARIDENTIFIER $@27 '=' expr $@28 ';' expr . $@29 ';' expr
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    OR   shift, and go to state 47
    AND  shift, and go to state 48
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    NE   shift, and go to state 52
    EQ   shift, and go to state 53
    LE   shift, and go to state 54
    GE   shift, and go to state 55
    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60

    $default  reduce using rule 80 ($@29)

    $@29  go to state 223


state 220

   77 loopExpression: INT VARIDENTIFIER $@24 '=' expr $@25 ';' . expr $@26 ';' expr

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 224
    lValue      go to state 36
    consValues  go to state 37


state 221

   62 caseStmt: CASE $@14 expr $@15 ':' . $@16 stmtList

    $default  reduce using rule 61 ($@16)

    $@16  go to state 225


state 222

   73 doStmt: DO openScope $@22 stmtList closeScope $@23 WHILE '(' expr ')' ';' .

    $default  reduce using rule 73 (doStmt)


state 223

   81 loopExpression: VARIDENTIFIER $@27 '=' expr $@28 ';' expr $@29 . ';' expr

    ';'  shift, and go to state 226


state 224

   77 loopExpression: INT VARIDENTIFIER $@24 '=' expr $@25 ';' expr . $@26 ';' expr
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    OR   shift, and go to state 47
    AND  shift, and go to state 48
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    NE   shift, and go to state 52
    EQ   shift, and go to state 53
    LE   shift, and go to state 54
    GE   shift, and go to state 55
    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60

    $default  reduce using rule 76 ($@26)

    $@26  go to state 227


state 225

   62 caseStmt: CASE $@14 expr $@15 ':' $@16 . stmtList

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    INT             shift, and go to state 4
    STR             shift, and go to state 5
    BOOL            shift, and go to state 6
    SWITCH          shift, and go to state 114
    CONST           shift, and go to state 8
    DO              shift, and go to state 115
    NOT             shift, and go to state 29
    RETURN          shift, and go to state 116
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    WHILE           shift, and go to state 117
    IF              shift, and go to state 118
    PRINT           shift, and go to state 119
    FOR             shift, and go to state 120
    CONTINUE        shift, and go to state 121
    BREAK           shift, and go to state 122
    ';'             shift, and go to state 123
    '-'             shift, and go to state 33
    '('             shift, and go to state 34
    '{'             shift, and go to state 108

    type              go to state 15
    varDeclaration    go to state 124
    constDeclaration  go to state 125
    variable          go to state 12
    stmtBlock         go to state 126
    stmt              go to state 127
    ifStmt            go to state 128
    returnStmt        go to state 129
    breakStmt         go to state 130
    continueStmt      go to state 131
    switchStmt        go to state 132
    whileStmt         go to state 133
    forStmt           go to state 134
    doStmt            go to state 135
    stmtList          go to state 228
    expr              go to state 137
    lValue            go to state 36
    consValues        go to state 37
    openScope         go to state 138


state 226

   81 loopExpression: VARIDENTIFIER $@27 '=' expr $@28 ';' expr $@29 ';' . expr

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 229
    lValue      go to state 36
    consValues  go to state 37


state 227

   77 loopExpression: INT VARIDENTIFIER $@24 '=' expr $@25 ';' expr $@26 . ';' expr

    ';'  shift, and go to state 230


state 228

   62 caseStmt: CASE $@14 expr $@15 ':' $@16 stmtList .
   83 stmtList: stmtList . stmt

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    INT             shift, and go to state 4
    STR             shift, and go to state 5
    BOOL            shift, and go to state 6
    SWITCH          shift, and go to state 114
    CONST           shift, and go to state 8
    DO              shift, and go to state 115
    NOT             shift, and go to state 29
    RETURN          shift, and go to state 116
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    WHILE           shift, and go to state 117
    IF              shift, and go to state 118
    PRINT           shift, and go to state 119
    FOR             shift, and go to state 120
    CONTINUE        shift, and go to state 121
    BREAK           shift, and go to state 122
    ';'             shift, and go to state 123
    '-'             shift, and go to state 33
    '('             shift, and go to state 34
    '{'             shift, and go to state 108

    $default  reduce using rule 62 (caseStmt)

    type              go to state 15
    varDeclaration    go to state 124
    constDeclaration  go to state 125
    variable          go to state 12
    stmtBlock         go to state 126
    stmt              go to state 151
    ifStmt            go to state 128
    returnStmt        go to state 129
    breakStmt         go to state 130
    continueStmt      go to state 131
    switchStmt        go to state 132
    whileStmt         go to state 133
    forStmt           go to state 134
    doStmt            go to state 135
    expr              go to state 137
    lValue            go to state 36
    consValues        go to state 37
    openScope         go to state 138


state 229

   81 loopExpression: VARIDENTIFIER $@27 '=' expr $@28 ';' expr $@29 ';' expr .
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    OR   shift, and go to state 47
    AND  shift, and go to state 48
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    NE   shift, and go to state 52
    EQ   shift, and go to state 53
    LE   shift, and go to state 54
    GE   shift, and go to state 55
    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60

    $default  reduce using rule 81 (loopExpression)


state 230

   77 loopExpression: INT VARIDENTIFIER $@24 '=' expr $@25 ';' expr $@26 ';' . expr

    STRING          shift, and go to state 24
    INTEGER         shift, and go to state 25
    VARIDENTIFIER   shift, and go to state 26
    TRUEBOOL        shift, and go to state 27
    FALSEBOOL       shift, and go to state 28
    NOT             shift, and go to state 29
    INC             shift, and go to state 30
    DEC             shift, and go to state 31
    FUNCIDENTIFIER  shift, and go to state 32
    '-'             shift, and go to state 33
    '('             shift, and go to state 34

    expr        go to state 231
    lValue      go to state 36
    consValues  go to state 37


state 231

   77 loopExpression: INT VARIDENTIFIER $@24 '=' expr $@25 ';' expr $@26 ';' expr .
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '*' expr
   93     | expr . '/' expr
   94     | expr . '<' expr
   95     | expr . '>' expr
   96     | expr . '%' expr
   97     | expr . OR expr
   98     | expr . AND expr
  108     | expr . GE expr
  109     | expr . LE expr
  110     | expr . NE expr
  111     | expr . EQ expr

    OR   shift, and go to state 47
    AND  shift, and go to state 48
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    NE   shift, and go to state 52
    EQ   shift, and go to state 53
    LE   shift, and go to state 54
    GE   shift, and go to state 55
    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60

    $default  reduce using rule 77 (loopExpression)
